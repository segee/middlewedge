gr 
olddigit = 99
theline$ = "0"


 print "If you have not done so already:"
 print "     1) This program should be running in the same directory as the simulator"
 print "        (it requires rtb (return to basics) be installed) "
 print "     2) You should have a directory in this directory that is ./i_o_directory"
 print "     3) You should have a ramdrive mounted to that directory"
 print "       mount -t tmpfs -o size=64k tmpfs ./i_o_directory"
 print " You only need to do this once per boot"

CYCLE 
  //
  digit = FN readoutputs()
  //
  IF digit <> olddigit THEN 
    olddigit = digit
    PROC drawleds()
    update
  ENDIF 
  PROC doinputs ()
REPEAT 
//
//
//
DEF FN readoutputs()
//
handle = openUp ("i_o_directory/b1_outputs.txt")
IF eof (handle) = FALSE THEN 
  input# handle, theline$
ENDIF 
close (handle)
theval$ = RIGHT$ (theline$, 1)
digit = ASC (theval$)
IF digit > ASC ("9") THEN 
  digit = digit - ASC ("a") + 10
ELSE 
  digit = digit - ASC ("0")
ENDIF 
 = digit
//
//
DEF PROC drawleds()
IF digit > 7 THEN 
  digit = digit - 8
  colour = Red
ELSE 
  colour = Grey
ENDIF 
circle (10, 45, 7, 1)
//
IF digit > 3 THEN 
  digit = digit - 4
  colour = Red
ELSE 
  colour = Grey
ENDIF 
circle (30, 45, 7, 1)
//
IF digit > 1 THEN 
  digit = digit - 2
  colour = Red
ELSE 
  colour = Grey
ENDIF 
circle (50, 45, 7, 1)
//
IF digit > 0 THEN 
  colour = Red
ELSE 
  colour = Grey
ENDIF 
circle (70, 45, 7, 1)
ENDPROC 
//

DEF PROC doinputs ()
  myinput = INKEY
  IF myinput <> -1 THEN 
    myline$ = "Switches:0x" + CHR$ (myinput)
    hvTab (0, 40)
    PRINT myline$
    handle = openUp ("i_o_directory/b1_inputs.txt")
    print# handle, myline$
    close (handle)
  ENDIF 
ENDPROC



